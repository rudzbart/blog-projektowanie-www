import sqlite3
conn = sqlite3.connect('db.sqlite3')

c = conn.cursor()

#c.execute("CREATE TABLE blog_visitors(visitor_id int, FirstName varchar(255), LastName varchar(255)) ")
#print(c.fetchall())
#c.execute("INSERT INTO blog_post (author_id, title, text, created_date) VALUES (1,'Test','Test Text','')")
# c.execute("INSERT INTO blog_visitors (visitor_id, FirstName, LastName) VALUES (1, 'Bartosz','Rudz')")
# c.execute("INSERT INTO blog_visitors (visitor_id, FirstName, LastName) VALUES (2, 'Daniel','Szarek')")
# c.execute("INSERT INTO blog_visitors (visitor_id, FirstName, LastName) VALUES (1, 'Przemek','Teska')")
# c.execute("INSERT INTO blog_visitors (visitor_id, FirstName, LastName) VALUES (2, 'Michal','Szpak')")
#c.execute("INSERT INTO blog_visitors (visitor_id, FirstName, LastName) VALUES (2, 'Michal','Rudz')")
# print(c.fetchall())
# c.execute("SELECT * FROM blog_post")
# print(c.fetchall())
# c.execute("SELECT DISTINCT title FROM blog_post")
# print(c.fetchall())
# c.execute("SELECT * FROM blog_post WHERE Title='Test'")
# print(c.fetchall())
# c.execute("SELECT * FROM blog_post WHERE author_id='1' AND Title='Test'")
# print(c.fetchall())
# c.execute("SELECT * FROM blog_post ORDER BY created_date")
#print(c.fetchall())
#c.execute("SELECT title FROM blog_post WHERE created_date IS NOT NULL")
#print(c.fetchall())
#c.execute("UPDATE blog_post SET created_date='2019-12-05 14:51:07.102608' WHERE title = 'Test'")
#print(c.fetchall())
#c.execute("DELETE FROM blog_post WHERE title = 'Pierwszy wpis Edytowany'")
#print(c.fetchall())
# c.execute("SELECT * FROM blog_post LIMIT 3")
# print(c.fetchall())
# c.execute("SELECT MIN(created_date) AS pierwszy FROM blog_post")
# print(c.fetchall())
# c.execute("SELECT MAX(created_date) AS ostatni FROM blog_post")
# print(c.fetchall())
#c.execute("SELECT COUNT(title) FROM blog_post")
#print(c.fetchall())
#c.execute("SELECT * FROM blog_post WHERE title LIKE 'T%'")
#print(c.fetchall())
# c.execute("SELECT * FROM blog_post WHERE text LIKE 'S%'")
# print(c.fetchall())
# c.execute("SELECT * FROM blog_post WHERE title IN ('Test','Pierwszy wpis Edytowany')")
# print(c.fetchall())
# c.execute("SELECT * FROM blog_post WHERE author_id BETWEEN 0 AND 2")
# print(c.fetchall())
# c.execute("SELECT title AS tytul FROM blog_post")
# print(c.fetchall())
# c.execute("SELECT blog_post.author_id, blog_visitors.FirstName FROM blog_post INNER JOIN blog_visitors ON blog_post.author_id = blog_visitors.visitor_id")
# print(c.fetchall())
# c.execute("SELECT blog_post.title, blog_visitors.visitor_id FROM blog_post LEFT JOIN blog_visitors ON blog_post.author_id = blog_visitors.visitor_id ORDER BY blog_post.title")
# print(c.fetchall())
#c.execute("SELECT A.FirstName AS FirstName1, B.FirstName AS FirstName2, A.LastName FROM blog_visitors A, blog_visitors B WHERE A.visitor_id <> B.visitor_id AND A.LastName = B.LastName ORDER BY A.LastName")
#print(c.fetchall())
#c.execute("SELECT COUNT(visitor_id), LastName FROM blog_visitors GROUP BY LastName")
#print(c.fetchall())
# c.execute("SELECT COUNT(visitor_id), LastName FROM blog_visitors GROUP BY LastName HAVING COUNT(visitor_id) >1")
# print(c.fetchall())
# c.execute("SELECT FirstName FROM blog_visitors WHERE EXISTS (SELECT title FROM blog_post WHERE blog_post.author_id = blog_visitors.visitor_id)")
#print(c.fetchall())
#c.execute("SELECT * INTO blog_post_backup FROM blog_post")
#print(c.fetchall())
#c.execute("INSERT INTO blog_post_backup (author_id, title, text) SELECT visitor_id, FirstName, LastName FROM blog_visitors")
#print(c.fetchall())

# Save (commit) the changes
conn.commit()
# We can also close the connection if we are done with it.
# Just be sure any changes have been committed or they will be lost.
conn.close()
